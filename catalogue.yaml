- name: intalling node js
  hosts:  catalogue
  become: yes
  tasks:
  - name: install nginx
    ansible.builtin.shell:  "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"
  - name: installing node js 
    ansible.builtin.yum:
      name: nodejs
      state: Installed
  - name: checking user roboshop
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  
  - when: output.rc != 0 
    name: create roboshop user
    ansible.builtin.user:
      name: roboshop
  - name: check app directory exits or not
    ansible.builtin.stats:
      path: /app
      register: outcome
  - when: outcome.stat.exists == False
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download catalogue 
    ansible.builtin.url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: unarchive the zip content
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app

  - name: install node js
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copying the service into systemd
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
      
  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: copy mongo repo to yum.repos.d
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install MongoDB
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.sudheerdev.online < /app/schema/catalogue.js

  - name: restart catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: true
    